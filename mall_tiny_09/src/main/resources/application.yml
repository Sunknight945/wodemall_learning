server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    data-username: root
    data-password: 123123
  redis:
    host: localhost # redis的ip
    database: 0 # redis数据库索引(默认为0)
    port: 6379 # redis 服务器连接端口
    password:  # 默认null
    jedis:
      pool:
        max-active: 8  #连接池最大连接数(使用负值标识没有限制)
        max-wait: -1ms #连接池最大阻塞等待时间(使用负值表示没有限制)
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间(毫秒)

  #在spring节点下添加Elasticsearch相关配置
  data:
    elasticsearch:
      repositories:
        enabled: true
      cluster-nodes: 127.0.0.1:9300 # es的连接地址及端口号
      cluster-name: elasticsearch # es集群的名称
    mongodb:
      host: localhost # Mongodb的连接地址
      port: 27017 #mongodb的端口
      database: mall-port # Mongodb的连接的数据库

  rabbitmq:
    host: localhost #rabbitmq的连接地址
    port: 5672 # rabbitmq的端口
    virtual-host: /mall #rabbitmq的虚拟host
    username: mall
    password: mall
    publisher-confirms: true # 如果对异步消息需要回调必须设置为true


mybatis:
  mapper-locations:
    - classpath:mapper/*.xml
    - classpath*:com/**/mapper/*.xml


# 自定义redis key
redis:
  key:
    prefix:
      authCode: "portal:authCode:"
    expire:
      authCode: 120 # 验证码超期时间

jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: mySecret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer  #JWT负载中拿到开头

